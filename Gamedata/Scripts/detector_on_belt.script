local snd_on = sound_object("detectors\\RF\\on")
local snd_off = sound_object("detectors\\RF\\off")
local snd_noise = sound_object("detectors\\RF\\noise")
local d_state = false
local vol_n = 0

function sound_trigger(state)
	if state and (not d_state) then
		snd_on:play(db.actor, 0, sound_object.s2d)
		d_state = true
		vol_n = 0.7
		snd_noise.volume = vol_n
	elseif (not state) and d_state then
		snd_off:play(db.actor, 0, sound_object.s2d)
		d_state = false
		vol_n = 0
		snd_noise.volume = vol_n
	end
end


local function actor_on_update()

	local obj_det_belt = db.actor:item_in_slot(9)
    local artifact = obj:get_artefact() or IsArtefact
    local obj = IsArtefact(obj)
    
	if obj_det_belt then
		obj_det_belt = db.actor:item_in_slot(9)
	else
		obj_det_belt = db.actor:active_detector()
	end
	
	if not (obj_det_belt and obj_det:section() == _device and obj_det:condition() >= obj_det:power_critical()) then
		sound_trigger(false)
		return
	end
	sound_trigger(true)

    emission = GetEvent("surge", "state") or GetEvent("psi_storm", "state")

    local vol_noise_lowest = 0.7

    for i=1,#artifact do
		if obj and (not emission) then
			local dist = db.actor:position():distance_to(obj:position())
            end
        end
    end
    vol_n = vol_noise_lowest
end

function on_game_start()
    RegisterScriptCallback("actor_on_update", actor_on_update)
end
